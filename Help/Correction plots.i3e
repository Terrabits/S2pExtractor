
import numpy as np
import math

# Calibrations loaded into channels:
outerChannel = 1;
innerChannel = 2;

#   Assuming devices on ports 1,2
#   Also assumes:
start_Hz = 10E6;
stop_Hz = 6E9;
points = 401;

# ZVA, ZNB are assigned to variables ZVA and ZNB, respectively


def loadEDF(instrument, channel):
    a_list_str = instrument.ask(":SENSe{}:CORRection:CDATa? 'DIRECTIVITY',1,2".format(channel));
    a_list_float = [float(i) for i in a_list_str];
    EDF = np.array(a_list_float[0::2])+1j*np.array(a_list_float[1::2]);
    return(EDF);

def loadERF(instrument, channel):
    a_list_str = instrument.ask(":SENSe{}:CORRection:CDATa? 'REFLTRACK',1,2".format(channel));
    a_list_float = [float(i) for i in a_list_str];
    ERF = np.array(a_list_float[0::2])+1j*np.array(a_list_float[1::2]);
    return(ERF);

def loadESF(instrument, channel):
    a_list_str = instrument.ask(":SENSe{}:CORRection:CDATa? 'SRCMATCH',1,2".format(channel));
    a_list_float = [float(i) for i in a_list_str];
    ESF = np.array(a_list_float[0::2])+1j*np.array(a_list_float[1::2]);
    return(ESF);

# ZVA corrections:
ZVA_EDF = loadEDF(ZVA, outerChannel);
ZVA_ERF = loadERF(ZVA, outerChannel);
ZVA_ESF = loadESF(ZVA, outerChannel);
ZVA_EDFfix = loadEDF(ZVA, innerChannel);
ZVA_ERFfix = loadERF(ZVA, innerChannel);
ZVA_ESFfix = loadESF(ZVA, innerChannel);

ZVA_EDFMagDifference = 20*np.log10(abs(ZVA_EDFfix)) - 20*np.log10(abs(ZVA_EDF));
ZVA_ERFMagDifference = 20*np.log10(abs(ZVA_ERFfix)) - 20*np.log10(abs(ZVA_ERF));
ZVA_ESFMagDifference = 20*np.log10(abs(ZVA_ESFfix)) - 20*np.log10(abs(ZVA_ESF));

ZVA_EDFPhaseDifference = 180.0/math.pi*np.unwrap(np.angle(ZVA_EDFfix*np.conj(ZVA_EDF)));
ZVA_ERFPhaseDifference = 180.0/math.pi*np.unwrap(np.angle(ZVA_ERFfix*np.conj(ZVA_ERF)));
ZVA_ESFPhaseDifference = 180.0/math.pi*np.unwrap(np.angle(ZVA_ESFfix*np.conj(ZVA_ESF)));

# ZNB corrections:
ZNB_EDF = loadEDF(ZNB, outerChannel);
ZNB_ERF = loadERF(ZNB, outerChannel);
ZNB_ESF = loadESF(ZNB, outerChannel);
ZNB_EDFfix = loadEDF(ZNB, innerChannel);
ZNB_ERFfix = loadERF(ZNB, innerChannel);
ZNB_ESFfix = loadESF(ZNB, innerChannel);

ZNB_EDFMagDifference = 20*np.log10(abs(ZNB_EDFfix)) - 20*np.log10(abs(ZNB_EDF));
ZNB_ERFMagDifference = 20*np.log10(abs(ZNB_ERFfix)) - 20*np.log10(abs(ZNB_ERF));
ZNB_ESFMagDifference = 20*np.log10(abs(ZNB_ESFfix)) - 20*np.log10(abs(ZNB_ESF));

ZNB_EDFPhaseDifference = 180.0/math.pi*np.unwrap(np.angle(ZNB_EDFfix*np.conj(ZNB_EDF)));
ZNB_ERFPhaseDifference = 180.0/math.pi*np.unwrap(np.angle(ZNB_ERFfix*np.conj(ZNB_ERF)));
ZNB_ESFPhaseDifference = 180.0/math.pi*np.unwrap(np.angle(ZNB_ESFfix*np.conj(ZNB_ESF)));

freq = np.linspace(start_Hz, stop_Hz, points);
#S11 = (EDFfix-EDF)/(ERF+ESF*(EDFfix-EDF));
#S21 = np.sqrt(ERF*ERFfix)/(ERF+ESF*(EDFfix-EDF));
#S22 = ESFfix-((ESF*ERFfix)/(ERF+ESF*(EDFfix-EDF)));

# Figure 1
fig = flib.pltframe.figure;
fig.clear();

# Plot 1 (dB)
ax = fig.add_subplot(321);
ax.patch.set_facecolor('black' );
ax.grid(color = 'green' , linestyle = '-');
ax.plot(freq, ZNB_EDFMagDifference, lw = 2, color = 'blue');
ax.plot(freq, ZVA_EDFMagDifference, lw = 2, color = 'red');


# Plot 2 (deg)
ax = fig.add_subplot(322);
ax.patch.set_facecolor('black');
ax.grid(color = 'green', linestyle = '-');
ax.plot(freq, ZNB_EDFPhaseDifference, lw = 2, color = 'blue');
ax.plot(freq, ZVA_EDFPhaseDifference, lw = 2, color = 'red');

# Plot 3 (dB)
ax = fig.add_subplot(323);
ax.patch.set_facecolor('black' );
ax.grid(color = 'green' , linestyle = '-');
ax.plot(freq, ZNB_ERFMagDifference, lw = 2, color = 'blue');
ax.plot(freq, ZVA_ERFMagDifference, lw = 2, color = 'red');


# Plot 4 (deg)
ax = fig.add_subplot(324);
ax.patch.set_facecolor('black');
ax.grid(color = 'green', linestyle = '-');
ax.plot(freq, ZNB_ERFPhaseDifference, lw = 2, color = 'blue');
# ax.plot(freq, ZVA_ERFPhaseDifference, lw = 2, color = 'red');


# Plot 5 (dB)
ax = fig.add_subplot(325);
ax.patch.set_facecolor('black' );
ax.grid(color = 'green' , linestyle = '-');
ax.plot(freq, ZNB_ESFMagDifference, lw = 2, color = 'blue');
ax.plot(freq, ZVA_ESFMagDifference, lw = 2, color = 'red');


# Plot 6 (deg)
ax = fig.add_subplot(326);
ax.patch.set_facecolor('black');
ax.grid(color = 'green', linestyle = '-');
ax.plot(freq, ZNB_ESFPhaseDifference, lw = 2, color = 'blue');
ax.plot(freq, ZVA_ESFPhaseDifference, lw = 2, color = 'red');

# Show plot
flib.pltframe.Show();


# Figure 2
fig = flib.pltframe.figure;
fig.clear();

EDF_diff = 180.0/math.pi*np.unwrap(np.angle(ZNB_EDFfix*np.conj(ZNB_EDF)*np.conj(ZVA_EDFfix)*ZVA_EDF));
ERF_diff = 180.0/math.pi*np.unwrap(np.angle(ZNB_ERFfix*np.conj(ZNB_ERF)*np.conj(ZVA_ERFfix)*ZVA_ERF));
ESF_diff = 180.0/math.pi*np.unwrap(np.angle(ZNB_ESFfix*np.conj(ZNB_ESF)*np.conj(ZVA_ESFfix)*ZVA_ESF));

# Plot 1 (deg)
ax = fig.add_subplot(311);
ax.patch.set_facecolor('black');
ax.grid(color = 'green', linestyle = '-');
ax.plot(freq, EDF_diff, lw = 2, color = 'red');

# Plot 2 (deg)
ax = fig.add_subplot(312);
ax.patch.set_facecolor('black');
ax.grid(color = 'green', linestyle = '-');
ax.plot(freq, ERF_diff, lw = 2, color = 'red');

# Plot 3 (deg)
ax = fig.add_subplot(313);
ax.patch.set_facecolor('black');
ax.grid(color = 'green', linestyle = '-');
ax.plot(freq, ESF_diff, lw = 2, color = 'red');

# Show plot
flib.pltframe.Show();